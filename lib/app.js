// Generated by CoffeeScript 1.11.1
(function() {
  var app, bodyParser, d3, express, fs, http, jsdom, metrics, path, url, user;

  http = require('http');

  user = require('./user.coffee');

  metrics = require('./metrics.coffee');

  url = require('url');

  fs = require('fs');

  express = require('express');

  bodyParser = require('body-parser');

  app = express();

  d3 = require('d3');

  jsdom = require('jsdom');

  path = require('path');

  app.set('port', 1337);

  app.set('views', __dirname + "/../views");

  app.set('view engine', 'jade');

  app.use('/public', express["static"](__dirname + "/../public"));

  app.use('/styles', express["static"](__dirname + "/../styles"));

  app.use('/node_modules', express["static"](__dirname + "/../node_modules"));

  app.use(bodyParser.json());

  app.use(bodyParser.urlencoded());

  app.listen(app.get('port'), function() {
    return console.log("server listening on " + (app.get('port')));
  });

  app.get('/', function(req, res) {
    return res.render('index', {});
  });

  app.get('/hello/:name', function(req, res) {
    return res.send("Hello " + req.params.name);
  });

  app.get('/metrics.json', function(req, res) {
    return metrics.get_test(function(err, data) {
      if (err) {
        throw next(err);
      }
      return res.status(200).json(data);
    });
  });

  app.get('/my_metrics.json', function(req, res) {
    return metrics.get('1', '1', '2013-01-09', function(err, data) {
      if (err) {
        throw next(err);
      }
      return res.status(200).json(data);
    });
  });

  app.get('/my_many_metrics.json', function(req, res) {
    return metrics.readStream('1', '1', function(err, data) {
      if (err) {
        throw next(err);
      }
      console.log('test : ' + data + ' ');
      return res.status(200).json(data);
    });
  });

  app.get('/metrics', function(req, res) {
    return res.render('metrics', {});
  });

  app.post('/metrics', function(req, res) {
    console.log(req.body);
    return metrics.batch(req.body, function(err, value) {
      if (err) {
        throw err;
      }
      return res.json(value);
    });
  });

  app.put('/', function(req, res) {});

  app["delete"]('/', function(req, res) {});

}).call(this);
