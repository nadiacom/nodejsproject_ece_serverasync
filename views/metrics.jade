include mixins
extends layout

block head 
  script(src='../public/js/jquery-3.1.1.min.js', type='text/javascript')
  script(src='../public/js/bootstrap.min.js',type='text/javascript')
  link(rel='stylesheet', href='../public/css/bootstrap.min.css')
  script(src='../public/js/d3.min.js',type='text/javascript')
  link(rel='stylesheet', href='../styles/styles.css')

block content
  +nav("ECE Node js project", "dropdown_menu")
    +nav_item( "index.html", "active" ) Home
    +nav_item( "about.html" ) About
    +nav_item( "contact.html" ) Contact
    +nav_item_dropdown( "#" )( label="Dropdown" )
      +nav_item( "#" ) Action
          +nav_item( "#" ) Another action
          +nav_item( "#" ) Something else here
          +nav_divider
          +nav_header Nav header
          +nav_item( "#" ) Separated link
          +nav_item( "#" ) One more separated link

  +panel("Panel Heading") We are a fairly small, flexible design studio that designs for print and web. We work flexibly with clients to fulfil their design needs. Whether you need to create a brand from scratch, including marketing materials and a beautiful and functional website or whether you are looking for a design refresh we are confident you will be pleased with the results.
  +button("info", "info.html", "small") Info

  div.container
    div.col-md-6.col-md-offset-3
      p hello world ! 
      p
      button(type="button" class="btn btn-success" id="show-metrics") Bring the metrics 
      #metrics
      svg#visualisation(width='1000', height='500')

  script
    :coffee-script
      InitChart= ->
        barData = [
          {
            'x': 1
            'y': 5
          }
          {
            'x': 20
            'y': 20
          }
          {
            'x': 40
            'y': 10
          }
          {
            'x': 60
            'y': 40
          }
          {
            'x': 80
            'y': 5
          }
          {
            'x': 100
            'y': 60
          }
          {
            'x': 120
            'y': 60
          }
        ]
        vis = d3.select('#visualisation')
        WIDTH = 1000
        HEIGHT = 500
        MARGINS =
          top: 20
          right: 20
          bottom: 20
          left: 50
        xRange = d3.scale.ordinal().rangeRoundBands([
          MARGINS.left
          WIDTH - (MARGINS.right)
        ], 0.1).domain(barData.map((d) ->
          d.x
        ))
        yRange = d3.scale.linear().range([
          HEIGHT - (MARGINS.top)
          MARGINS.bottom
        ]).domain([
          0
          d3.max(barData, (d) ->
            d.y
          )
        ])
        xAxis = d3.svg.axis().scale(xRange).tickSize(5).tickSubdivide(true)
        yAxis = d3.svg.axis().scale(yRange).tickSize(5).orient('left').tickSubdivide(true)
        vis.append('svg:g').attr('class', 'x axis').attr('transform', 'translate(0,' + HEIGHT - (MARGINS.bottom) + ')').call xAxis
        vis.append('svg:g').attr('class', 'y axis').attr('transform', 'translate(' + MARGINS.left + ',0)').call yAxis
        vis.selectAll('rect').data(barData).enter().append('rect').attr('x', (d) ->
          xRange d.x
        ).attr('y', (d) ->
          yRange d.y
        ).attr('width', xRange.rangeBand()).attr('height', (d) ->
          HEIGHT - (MARGINS.bottom) - yRange(d.y)
        ).attr('fill', 'grey').on('mouseover', (d) ->
          d3.select(this).attr 'fill', 'blue'
          return
        ).on 'mouseout', (d) ->
          d3.select(this).attr 'fill', 'grey'
          return
        return
      InitChart()
